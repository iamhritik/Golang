// Day 1
    go build -> compiles a bunch of GO Source Code files and creates a executable file that you can directly run in your system.
    go compile -> compiles and executes one or two files
    go fmt -> formats all the code in each file in the current dir
    go install -> compiles and installs a package
    go get -> downloads the raw source code of someone else's package
    go test -> runs any tests associated with the current project

// Day 2
    variable declaration:
        var VarName type = VarValue | GO is static Types  unlike python that is dynamic type that's why we need to define VarType at the time of declaration.| works outside of func block as well
        you can also define variable like this: VarName := "Var value 123" only within the func block
        you can also initialize a var and then later assign a value to it:
            var VarTest int
            VarTest = 32
    Basic GO data types -> bool,string,int,float64

    slices and loops:
        array - fixed length list of things and slice - an array that can grow or shrink (same type of datatype exists in it)
        slice declaration:
            cards := []string{"Ace of Diamonds", newCard()} // type should be singular
        for loop:
            for index, card := range cards { -> index of this element in the array, current card we are iterating over, take the slice of cards and loop over it
                fmt.Printlin(card) // run this one time for each card in the slice
            }
